version: "3.8"

volumes:
  order-service-mysql-volume:
  inventory-service-mysql-volume:

services:
  producer-service:
    image: producer-service-image
    container_name: producer-service-container
    restart: always
    depends_on:
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 8080:8080

  consumer-service:
    image: consumer-service-image
    container_name: consumer-service-container
    restart: always
    depends_on:
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 8081:8081

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-container
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092